function solution(n, left, right) {
    // [[1,2,3],[2,2,3],[3,3,3]]

    // [
    //  [1,2,3]
    //  [2,2,3]
    //  [3,3,3]
    //         ]

    // 1 idx = 1,1
    // 2 idx = 1,2 2,1 2,2
    // 3 idx = 1,3 2,3 3,1 3,2 3,3

    const ans = []
    for (let i = 0; i < n; i++) {
        for (let j = 0; j < n; j++) {
            const num = Math.max(i, j) + 1;
            ans.push(num);
        }
    }

    return ans.slice(left, right + 1)
}

// 테스트 1 〉	통과 (5.60ms, 44.3MB)
// 테스트 2 〉	실패 (런타임 에러)
// 테스트 3 〉	실패 (런타임 에러)
// 테스트 4 〉	통과 (0.68ms, 33.7MB)
// 테스트 5 〉	통과 (1.18ms, 33.7MB)
// 테스트 6 〉	통과 (32.65ms, 67.2MB)
// 테스트 7 〉	통과 (32.89ms, 67.4MB)
// 테스트 8 〉	통과 (34.76ms, 67.3MB)
// 테스트 9 〉	통과 (3482.48ms, 1.44GB)
// 테스트 10 〉	통과 (3687.16ms, 1.44GB)
// 테스트 11 〉	통과 (2387.47ms, 1.22GB)
// 테스트 12 〉	실패 (런타임 에러)
// 테스트 13 〉	실패 (런타임 에러)
// 테스트 14 〉	실패 (런타임 에러)
// 테스트 15 〉	실패 (런타임 에러)
// 테스트 16 〉	실패 (런타임 에러)
// 테스트 17 〉	실패 (런타임 에러)
// 테스트 18 〉	실패 (런타임 에러)
// 테스트 19 〉	실패 (런타임 에러)
// 테스트 20 〉	실패 (런타임 에러)