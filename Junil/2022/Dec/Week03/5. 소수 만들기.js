function solution(nums) {
    // 0,1,2 0,1,3 0,1,4
    // 0,2,3 0,2,4
    // 0,3,4

    // 1,2,3 1,2,4
    // 1,3,4

    // 2,3,4
    let count = 0
    for (let i = 0; i < nums.length; i++) {
        for (let j = i + 1; j < nums.length; j++) {
            for (let k = j + 1; k < nums.length; k++) {
                if (isPrime(nums[i] + nums[j] + nums[k])) {
                    count++
                }
            }
        }
    }
    return count
}

function isPrime(x) {
    for (let i = 2; i <= Math.sqrt(x); i++) {
        if (x % i === 0) return false
    }
    return true
}

// 테스트 1 〉	통과 (1.64ms, 35.7MB)
// 테스트 2 〉	통과 (1.97ms, 35.7MB)
// 테스트 3 〉	통과 (0.29ms, 33.6MB)
// 테스트 4 〉	통과 (0.40ms, 33.5MB)
// 테스트 5 〉	통과 (1.48ms, 35.7MB)
// 테스트 6 〉	통과 (1.88ms, 35.9MB)
// 테스트 7 〉	통과 (0.28ms, 33.6MB)
// 테스트 8 〉	통과 (5.01ms, 35.9MB)
// 테스트 9 〉	통과 (0.76ms, 33.5MB)
// 테스트 10 〉	통과 (6.07ms, 36MB)
// 테스트 11 〉	통과 (0.18ms, 33.6MB)
// 테스트 12 〉	통과 (0.19ms, 33.4MB)
// 테스트 13 〉	통과 (0.25ms, 33.5MB)
// 테스트 14 〉	통과 (0.15ms, 33.4MB)
// 테스트 15 〉	통과 (0.15ms, 33.6MB)
// 테스트 16 〉	통과 (4.22ms, 35.9MB)
// 테스트 17 〉	통과 (4.11ms, 35.7MB)
// 테스트 18 〉	통과 (0.21ms, 33.5MB)
// 테스트 19 〉	통과 (0.07ms, 33.6MB)
// 테스트 20 〉	통과 (6.97ms, 35.8MB)
// 테스트 21 〉	통과 (4.60ms, 35.9MB)
// 테스트 22 〉	통과 (0.45ms, 33.5MB)
// 테스트 23 〉	통과 (0.05ms, 33.6MB)
// 테스트 24 〉	통과 (4.55ms, 35.9MB)
// 테스트 25 〉	통과 (4.24ms, 36MB)
// 테스트 26 〉	통과 (0.05ms, 33.5MB)