function solution(t, p) {
    // p.length 만큼 [i + @] // 비교하는 숫자의 자릿수가 p의 길이
    let count = 0
    for (let i = 0; i < t.length; i++) {
        if (t.substring(i, p.length + i).length === p.length) {
            Number(t.substring(i, p.length + i)) <= p ? count++ : null
        }
    }
    return count
}

// 테스트 1 〉	통과 (0.71ms, 33.5MB)
// 테스트 2 〉	통과 (40.30ms, 36.8MB)
// 테스트 3 〉	통과 (2.30ms, 36.5MB)
// 테스트 4 〉	통과 (0.83ms, 33.7MB)
// 테스트 5 〉	통과 (0.67ms, 33.5MB)
// 테스트 6 〉	통과 (2.36ms, 36.4MB)
// 테스트 7 〉	통과 (37.52ms, 37.3MB)
// 테스트 8 〉	통과 (0.74ms, 33.6MB)
// 테스트 9 〉	통과 (0.45ms, 33.5MB)
// 테스트 10 〉	통과 (0.15ms, 33.4MB)
// 테스트 11 〉	통과 (1.12ms, 33.6MB)
// 테스트 12 〉	통과 (4.17ms, 37.3MB)
// 테스트 13 〉	통과 (1.78ms, 33.9MB)
// 테스트 14 〉	통과 (1.11ms, 33.8MB)
// 테스트 15 〉	통과 (0.94ms, 33.6MB)
// 테스트 16 〉	통과 (0.97ms, 33.6MB)
// 테스트 17 〉	통과 (3.61ms, 37.1MB)
// 테스트 18 〉	통과 (2.83ms, 36.9MB)
// 테스트 19 〉	통과 (0.47ms, 33.5MB)
// 테스트 20 〉	통과 (0.40ms, 33.5MB)
// 테스트 21 〉	통과 (0.13ms, 33.5MB)
// 테스트 22 〉	통과 (0.22ms, 31.9MB)
// 테스트 23 〉	통과 (0.42ms, 31.8MB)
// 테스트 24 〉	통과 (0.14ms, 33.5MB)
// 테스트 25 〉	통과 (0.15ms, 33.4MB)
// 테스트 26 〉	통과 (0.14ms, 33.5MB)
// 테스트 27 〉	통과 (0.13ms, 33.4MB)
// 테스트 28 〉	통과 (0.14ms, 33.4MB)
// 테스트 29 〉	통과 (0.14ms, 33.3MB)
// 테스트 30 〉	통과 (0.35ms, 33.5MB)
// 테스트 31 〉	통과 (0.04ms, 33.4MB)
// 테스트 32 〉	통과 (0.05ms, 33.4MB)
// 테스트 33 〉	통과 (0.13ms, 33.4MB)
// 테스트 34 〉	통과 (0.13ms, 33.4MB)
// 테스트 35 〉	통과 (0.13ms, 33.4MB)
// 테스트 36 〉	통과 (0.15ms, 33.4MB)
// 테스트 37 〉	통과 (0.13ms, 33.4MB)
// 테스트 38 〉	통과 (0.13ms, 33.4MB)